version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio-storage
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - app-network

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8081:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: minio-storage
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/mydb
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    depends_on:
      - kafka
      - minio
      - postgres
      - axonserver
    networks:
      - app-network

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "8082:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      MINIO_ENDPOINT: minio-storage
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - kafka
      - minio
      - axonserver
    networks:
      - app-network

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - "8083:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - axonserver
    networks:
      - app-network

  saga-service:
    build:
      context: ./saga-service
    container_name: saga-service
    ports:
      - "8084:8080"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - axonserver
    networks:
      - app-network

  axonserver:
    image: axoniq/axonserver
    container_name: axonserver
    ports:
      - "8024:8024"
      - "8124:8124"
    networks:
      - app-network

  spark-consumer:
    build:
      context: ./spark-consumer
    depends_on:
      - kafka
    command: >
      bash -c "sleep 20 &&
      /opt/bitnami/spark/bin/spark-submit
        --master local[*]
        --class kpfu.itis.allayarova.SparkKafkaConsumer
        /opt/app/app.jar"
volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
